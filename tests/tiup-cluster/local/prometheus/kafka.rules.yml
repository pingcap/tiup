# magic-string-for-test
groups:
- name: alert.rules
  rules:
  - alert: Kafka_is_down
    expr: probe_success{group="kafka"} == 0
    for: 1m
    labels:
      env: ENV_LABELS_ENV
      level: emergency
      expr: probe_success{group="kafka"} == 0
    annotations:
      description: 'cluster: ENV_LABELS_ENV, instance: {{ $labels.instance }}'
      value: '{{ $value }}'
      summary: Kafka is down

  - alert: kafka_brokers
    expr: kafka_brokers < 3
    for: 1m
    labels:
      env: ENV_LABELS_ENV
      level: emergency
      expr:  kafka_brokers < 3
    annotations:
      description: 'cluster: ENV_LABELS_ENV, instance: {{ $labels.instance }}, values: {{ $value }}'
      value: '{{ $value }}'
      summary: One or more kafka brokers are down

  - alert: Zookeeper_is_down
    expr: probe_success{group="zookeeper"} == 0
    for: 1m
    labels:
      env: ENV_LABELS_ENV
      level: emergency
      expr: probe_success{group="zookeeper"} == 0
    annotations:
      description: 'cluster: ENV_LABELS_ENV, instance: {{ $labels.instance }}'
      value: '{{ $value }}'
      summary: Zookeeper is down

  - alert: kafka_topic_partition_in_sync_replica
    expr: kafka_topic_partition_in_sync_replica != 3
    for: 1m
    labels:
      env: ENV_LABELS_ENV
      level: critical
      expr: kafka_topic_partition_in_sync_replica != 3
    annotations:
      description: 'cluster: ENV_LABELS_ENV, topic: {{ $labels.topic }}, partition: {{ $labels.partition }}, values: {{ $value }}'
      value: '{{ $value }}'
      summary: kafka topic partition in sync replica is missing

  - alert: kafka_topic_partition_leader_change
    expr: changes(kafka_topic_partition_leader[10m]) >= 1
    for: 1m
    labels:
      env: ENV_LABELS_ENV
      level: warning
      expr: changes(kafka_topic_partition_leader[10m]) >= 1
    annotations:
      description: 'cluster: ENV_LABELS_ENV, topic: {{ $labels.topic }}, partition: {{ $labels.partition }}, values: {{ $value }}'
      value: '{{ $value }}'
      summary: kafka topic partition leader change
