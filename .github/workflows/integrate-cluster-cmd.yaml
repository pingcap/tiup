---

name: integrate-cluster-cmd

on:
  pull_request:
    branches:
      - master
      - release-*
  push:
    branches:
      - master
      - release-*

jobs:
  cluster:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        cases:
          - "test_cmd"
          # - "test_cmd_tls_native_ssh"
          - "test_upgrade"
          # - "test_upgrade_tls"
    env:
      working-directory: ${{ github.workspace }}/go/src/github.com/${{ github.repository }}
    steps:
      - name: Set up Go 1.14
        uses: actions/setup-go@v2
        with:
          go-version: 1.14
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha  }}
          path: go/src/github.com/${{ github.repository  }}
      - name: Build build_integration_test
        working-directory: ${{env.working-directory}}
        run: |
          export GOPATH=${GITHUB_WORKSPACE}/go
          export PATH=$PATH:$GOPATH/bin
          make build_integration_test

      - name: Build the docker-compose stack
        working-directory: ${{env.working-directory}}
        # with --dev the first run will fail for unknow reason, just retry it and will success now..
        run: TIUP_CLUSTER_ROOT=${{env.working-directory}} ./docker/up.sh --daemon --dev || TIUP_CLUSTER_ROOT=${{env.working-directory}} ./docker/up.sh --daemon --dev

      - name: Check running containers
        run: |
          docker ps
          df -h
          free -h

      - name: Run test suite
        id: test
        working-directory: ${{env.working-directory}}
        run: |
          # should not use -it
          # ref: https://stackoverflow.com/questions/43099116/error-the-input-device-is-not-a-tty
          docker exec  tiup-cluster-control bash /tiup-cluster/tests/tiup-cluster/run.sh ${{matrix.cases}}

      - name: Collect component log
        working-directory: ${{env.working-directory}}
        # if: steps.test.outputs.exit_code != 0
        if: always()
        run: |
          docker exec  tiup-cluster-control bash /tiup-cluster/tests/tiup-cluster/script/pull_log.sh /tiup-cluster/logs
          ls ${{env.working-directory}}
          tar czvf ${{env.working-directory}}/logs.tar.gz ${{env.working-directory}}/logs/

      - name: Upload component log
        # if: steps.test.outputs.exit_code != 0
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: component_logs
          path: ${{env.working-directory}}/logs.tar.gz

      - name: Output cluster debug log
        working-directory: ${{env.working-directory}}
        if: always()
        run: |
          pwd
          docker ps
          df -h
          free -h
          "cat ./tests/*.log" || true

      - name: Upload coverage to Codecov
        working-directory: ${{env.working-directory}}
        run: |
          curl -s https://codecov.io/bash | bash -s - -F integrate,cluster -s ${{env.working-directory}}/tests/tiup-cluster/cover -f '*.out'
