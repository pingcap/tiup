---
name: integrate-playground

on:
  pull_request:
    branches:
      - master
      - release-*
    paths-ignore:
      - '**.html'
      - '**.md'
      - 'CNAME'
      - 'LICENSE'
      - 'doc/**'
      - 'embed/templates/examples/**'
      - 'embed/templates/examples/**'
      - 'components/bench/**'
      - 'components/client/**'
      - 'components/ctl/**'
      - 'components/cluster/**'
      - 'components/doc/**'
      - 'components/errdoc/**'
      - 'components/dm/**'
      - '.github/workflows/integrate-cluster**'
      - '.github/workflows/integrate-dm**'
      - '.github/workflows/integrate-tiup**'
  push:
    branches:
      - master
    paths-ignore:
      - '**.html'
      - '**.md'
      - 'CNAME'
      - 'LICENSE'
      - 'doc/**'
      - 'embed/templates/examples/**'
      - 'embed/templates/examples/**'
      - 'embed/templates/examples/**'
      - 'components/bench/**'
      - 'components/client/**'
      - 'components/ctl/**'
      - 'components/cluster/**'
      - 'components/doc/**'
      - 'components/errdoc/**'
      - 'components/dm/**'
      - '.github/workflows/integrate-cluster**'
      - '.github/workflows/integrate-dm**'
      - '.github/workflows/integrate-tiup**'

jobs:
  playground:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: true
      matrix:
        cases:
          - "test_playground"
    env:
      working-directory: ${{ github.workspace }}/go/src/github.com/${{ github.repository }}
    steps:
      - name: Set up Go 1.16
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          path: go/src/github.com/${{ github.repository }}
      - name: Build build_tiup_playground_test
        working-directory: ${{ env.working-directory }}
        run: |
          export GOPATH=${GITHUB_WORKSPACE}/go
          export PATH=$PATH:$GOPATH/bin
          make tiup build_tiup_playground_test

      - name: Run test suite
        id: test
        working-directory: ${{ env.working-directory }}
        run: |
          export PATH=$PATH:${{ env.working-directory }}/bin/
          bash ${{ env.working-directory }}/tests/tiup-playground/${{ matrix.cases }}.sh

      - name: Collect component log
        working-directory: ${{ env.working-directory }}
        if: ${{ failure() }}
        # if: always()
        run: |
          # ignore the rocksdb
          find ${{ env.working-directory }}/tests/tiup-playground/_tmp/home/data -type f -name "*.log" | grep -vE '/data/(raft|db|region-meta)/' | xargs tar czvf ${{ env.working-directory }}/playground.logs.tar.gz

      - name: Upload component log
        if: ${{ failure() }}
        # if: always()
        uses: actions/upload-artifact@v1
        with:
          name: playground_logs
          path: ${{ env.working-directory }}/playground.logs.tar.gz

      - name: Output playground debug log
        working-directory: ${{ env.working-directory }}
        if: ${{ failure() }}
        # if: always()
        run: |
          for f in $(find ${{ env.working-directory }}/tests/tiup-playground/_tmp/home/data -type f -name "*.log" | grep -vE '/data/(raft|db|region-meta)/'); do echo "${f}" && cat "${f}"; done

      - name: Upload coverage to Codecov
        working-directory: ${{ env.working-directory }}
        run: |
          curl -s https://codecov.io/bash | bash -s - -F integrate,playground -s ${{ env.working-directory }}/tests/tiup-playground/cover -f '*.out'
