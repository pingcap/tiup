---

name: integrate-tiup

on:
  pull_request:
    branches:
      - master
      - release-*
  push:
    branches:
      - master
      - release-*

jobs:
  tiup:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: true
      matrix:
        cases:
          - "test_tiup"
    env:
      working-directory: ${{ github.workspace }}/go/src/github.com/${{ github.repository }}
    steps:
      - name: Set up Go 1.14
        uses: actions/setup-go@v2
        with:
          go-version: 1.14
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha  }}
          path: go/src/github.com/${{ github.repository  }}

      - name: Build build_tiup_test
        working-directory: ${{env.working-directory}}
        run: |
          export GOPATH=${GITHUB_WORKSPACE}/go
          export PATH=$PATH:$GOPATH/bin
          make build_tiup_test

      - name: Run test suite
        id: test
        working-directory: ${{env.working-directory}}
        run: |
          export PATH=$PATH:${{env.working-directory}}/bin/
          echo $PATH
          bash ${{env.working-directory}}/tests/tiup/${{matrix.cases}}.sh
      
      - name: Upload coverage to Codecov
        working-directory: ${{env.working-directory}}
        run: |
          curl -s https://codecov.io/bash | bash -s - -F integrate,tiup -s ${{env.working-directory}}/tests/tiup/cover -f '*.out'

  unit-test:
    runs-on: ubuntu-latest
    env:
      working-directory: ${{ github.workspace }}/go/src/github.com/${{ github.repository }}
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha  }}
          path: go/src/github.com/${{ github.repository  }}

      - name: Set up Go 1.14
        uses: actions/setup-go@v2
        with:
          go-version: 1.14
        id: go

      - name: make unit-test
        working-directory: ${{env.working-directory}}
        run: |
          export GOPATH=${GITHUB_WORKSPACE}/go
          export PATH=$PATH:$GOPATH/bin
          make check
          make test

      - name: Upload coverage to Codecov
        working-directory: ${{env.working-directory}}
        run: |
          curl -s https://codecov.io/bash | bash -s - -F unittest -s cover -f '*.out'
